services:
  api-gateway:
    image: sanazez/work-sphere-api-gateway
    container_name: work-sphere-api
    env_file: .env
    ports:
      - '3000:3000'
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_PASS: ${RABBITMQ_PASS:-password}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST:-/work_sphere_default}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - backend

  rabbitmq:
    container_name: worksphere_rabbitmq
    image: rabbitmq:4.0.8-management
    hostname: rabbitmq
    env_file: .env
    ports:
      - '5672:5672' # AMQP protocol
      - '15672:15672' # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-password}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/work_sphere_default}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'status']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  rabbitmq_data:
